# .github/workflows/deploy.yml
name: Deploy to GitHub Pages
on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci

      # Detect the first Angular project and its outputPath (works even if renamed)
      - name: Detect app and dist
        id: detect
        run: |
          APP=$(node -p "Object.keys(require('./angular.json').projects)[0]")
          DIST=$(node -p "require('./angular.json').projects['$APP'].architect.build.options.outputPath")
          echo "app=$APP"   >> $GITHUB_OUTPUT
          echo "dist=$DIST" >> $GITHUB_OUTPUT
          echo "Detected app: $APP"
          echo "Detected dist: $DIST"

      # If repo is "username.github.io" => base="/", else base="/<repo>/"
      - name: Compute base-href
        id: base
        run: |
          REPO=${GITHUB_REPOSITORY#*/}
          if [ "$REPO" = "${GITHUB_REPOSITORY_OWNER}.github.io" ]; then
            echo "base=/" >> $GITHUB_OUTPUT
          else
            echo "base=/$REPO/" >> $GITHUB_OUTPUT
          fi
          echo "Using base-href: $(tail -n1 $GITHUB_OUTPUT | cut -d'=' -f2)"

      - name: Build
        run: npx ng build --configuration production --base-href "${{ steps.base.outputs.base }}"

      # SPA fallback for deep links
      - name: Add SPA fallback
        run: cp "${{ steps.detect.outputs.dist }}/index.html" "${{ steps.detect.outputs.dist }}/404.html"

      - name: List dist (debug)
        run: ls -laR "${{ steps.detect.outputs.dist }}"

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect.outputs.dist }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4